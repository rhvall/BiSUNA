; //
; //  SymmetricEncryptionCPA.ini
; //  BiSUNAOpenCL
; //
; //  Created by RHVT on 5/12/19.
; //  Copyright Â© 2019 R. All rights reserved.
; //
; //////////////////////////////////////////////////////////
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, version 3 or later.
;
; This program is distributed in the hope that it will be useful, but
; WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program. If not, see <http://www.gnu.org/licenses/>.
; //////////////////////////////////////////////////////////

[SymmetricEncryptionCPA]
; Number of steps each generation will run, consider that Alice (encryptor) and
; Bob (decryptor) will share equal amount of steps.
MaxSteps = 150

; The number of unsigned short data to be transmitted will be composed of.
PayloadSize = 3

; The number of unsigned short the "password" will be composed of.
KeySize = 3

; The number of steps an adversary should train extra in order to gain
; a competitive advantage over ordinary agents.
MaximumAdversarialAdvantage = 100

; Number of generations it should remain in Max Expected Reward to finalize the environment
NumGensMaxExpectedReward = 20

; This will signal to the environment that the adversary should execute first to
; learn to distinguish between payloads. This flag only applies to CPA environment
AdversaryRequiresTraining = false

; Signal that Alice and Bob should execute training without Eve advantage
PreTrainAB = true

; When this is enabled, it will read A&B networks, take the best agent after 10 episodes
; and will try to find an Eve that will "hack" A&B communication for the number of "MaxSteps".
; Only Eve will continue evolving during this phase.
TestMode = true
